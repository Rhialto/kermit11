Kermit-11 known problems

07-Apr-1986 09:37 (Pending)

 On  RT11 FB systems with a large number of devices, Kermit can displace
the USR (force it to swap) and crash when accessing  the  USR  from  the
higher  addressed  overlays  in  Kermit. The fix for something like this
may not be practical; it can be worked around by UNLOADING and  REMOVING
unneeded  device  drivers  from  lowest  address to higher addresses (to
prevent fragmentation of background memory). If you run K11RT4.SAV on  a
FB  system  and find either (1) The program crashes on file transfers or
(2) KMON says the save image is too  large,  then  remove  the  unneeded
drivers and set the USR to swap. 

24-MAR-1986 14:23 (Fixed in version 3.49)

 Attribute processing is incorrect for some attribute types. This  dates
back  to  April 1984 when support was first added, but no other versions
were available to test against.  The  correction,  made  to  K11ATR.MAC,
will  cause  V3.49  or later of Kermit-11 to have compatability problems
with previous versions  of  Kermit-11.  The  main  problem  will  be  in
informing  each  other of binary file arrival; the only workaround is to
explicitly force two communicating Kermit-11's  into  binary  mode  with
the SET FILE command. See K11INS.DOC for further information. 

 The  specific  problem is that the protocol requires the attribute TYPE
field to be  followed  by  a  LENGTH  byte  to  specify  the  number  of
characters  following.  Kermit-11  was  not  always inserting the LENGTH
field. The new  version,  3.49,  will  be  able  to  tell  if  an  older
Kermit-11  is sending in the incorrect format by virtue of the fact that
the first attribute packet that is  sent  is  the  system  id  code  and
operating  system. Since this attribute will always be a short one (2 or
3 characters at most) it is a simple matter to detect the presence of  a
'D'  (for  DEC)  in  the  position  of  the  LENGTH field and set a flag
accordingly. However, in the case of the corrected Kermit-11 sending  to
a  pre  3.49 version, this will not be the case and all attempts to rely
on the transfer of attribute packets will fail. 

brian@uoft02.bitnet

------------------------------

        .sbttl  getcm1  check for additional input needed

;       G E T C M 1
;
;       input:  @r5     current command buffer
;               2(r5)   command table address
;               4(r5)   index of the current command
;
;       output: r0      index of current command or < 0 for error
;               argbuf  any additional input or rest of the command line

        .enabl  lsb                     ; /55/

getcm1: save    <r1,r2,r3>              ; Save registers that we destroy
        sub     #100    ,sp             ; /55/ Allocate a small buffer for
        mov     sp      ,r2             ; /55/ saving the command prompt.
        tst     wasnul                  ; /45/ Was the command for ?
        beq     10$                     ; /45/ No
        clr     wasnul                  ; /45/ Not null anymore
        clr     r0                      ; /45/ Yes, return index 0
        br      110$                    ; /45/ Exit
10$:    mov     @r5     ,r1             ; Get command line address
        scan    #40     ,r1             ; Look for a space that might delimit
        tst     r0                      ; the command name from an argument
        beq     30$                     ; Nothing there
        add     r1      ,r0             ; Point to the string after the space
        COPYZ   r0,argbuf,#200          ; Copy the command arg over please
        br      100$                    ; And exit

30$:    mov     4(r5)   ,r3             ; Get the command index
        mul     #$listl*2,r3            ; If no arg given, see if one is needed
        add     2(r5)   ,r3             ; Add in base address of command table
        mov     .cmdar(r3),r3           ; Get the argument prompt now
        tstb    @r3                     ; Anything there that is required ?
        beq     100$                    ; No, so take a normal exit then.
        STRCPY  r2      ,r3             ; /55/ Copy the prompt over now
40$:    CALLS   kbredi  ,<r2,argbuf>    ; /55/ Read a command from the keyboard
        tst     r0                      ; And exit if it failed for whatever
        bne     90$                     ; The read failed (control Z typed).
        tst     cccnt                   ; No, but is there a Control C?
        bne     90$                     ; Yes, treat as end of file
        CALLS   cvt$$,<argbuf,r1,#cvtarg>;Remove junk, convert to upcase
        tst     r0                      ; Is there anything left ?
        beq     40$                     ; No, reprompt and try again
        mov     r0      ,r1             ; Something is left, point to the
        add     argbuf  ,r1             ; end of the line and null terminate
        clrb    @r1                     ; ...
        br      100$                    ; Take normal exit


90$:    MESSAGE                         ; /55/ Insure a carriage return
        mov     #cmd$ab ,r0             ; Control Z on keyboard read.
        br      110$                    ; And exit
100$:   mov     4(r5)   ,r0             ; Return command index
110$:   add     #100    ,sp             ; /55/ Pop the temporary buffer
        unsave  <r3,r2,r1>              ; Restore registers we used
        return                          ; And exit

        .dsabl  lsb                     ; /55/

        global  <argbuf ,cmdadr ,cmdbuf ,cmdnum>

------------------------------

Date: Mon, 23 Mar 87  13:00 EST
From: Lewis M. Dreblow - PSYCH at UFFSC
Subject: Kermit-11 Problem Discovered and Solved
Keywords: Kermit-11

  I wish to inform the user community of a problem which occurred with the
K11 release of Kermit. I was trying to use kermit on a 11/23 running RTV5
and TSXV5. I had no trouble using the release as a server, but kept getting
hung whenever I tried to do a get or send to another remote server. It
didn't matter what machine was on the server end. After about a month of
tearing my hair out I discovered that I had TSGENed IOABT = 0 which caused
TSX to wait for IO completion on jobs. This seemed fine at TSGEN time, but
due to the .ABTIO MCALL in K11PRT caused kermit to hang for two minutes at
every get or send command.

  Thus, users should be aware that they have to either (1) TSGEN IOABT = 1
or (2) at the command line (or in a command file) prior to running kermit
issue the SET IO ABORT command. You may want to remember to SET IO NOABORT
after running kermit as well.

------------------------------

Date: Fri 17 Jul 87 12:46:56-EDT
From: Christine M Gianone <SY.CHRISTINE@CU20B.COLUMBIA.EDU>
Subject: K11 Kermit and MS-DOS Kermit at 9600 Baud
Keywords: K11 Kermit, MS-DOS Kermit

Randy Rushton (215) 628-4530 is trying to transfer a text file from the
PDP11 to the IBM PC (Using the latest versions of Kermit I believe).  It
works fine at 2400 baud but not at 9600.  Is this because of the PDP11's
front end buffer size?  Is there a work-around?

Date:     Tue, 28 Jul 87 10:23 EDT
From:     <BRIAN@UOFT02.BITNET> (Brian Nelson)
Subject:  k11

This is really dependant on about 10,000 things. I run 9600 all the time
and have no problems. Maybe its RT11 and multi-terminal support? If so
then the max speed for that runs around 4800, but real thruput is down
around 100 cps due to extremely high overhead. If thats what they are
using they should switch to a dl11 or clone interface and use the xl
handler from rt 5.1 or later.

Anyway, thats the only case where I know there is a restriction. As far
as the other exec's go, xon/xoff works pretty good. M+ has buffering
to 255 chars, rsts 9.x has buffering settable up to 7K or so.

Brian

------------------------------

Date:     Sun, 7 Dec 86 18:41 GMT
From:     <KERMIT@CZHETH5A.BITNET> (H.Wipf)
Subject:  News, and ask for files


Regards,
Wipf Hansruedi

Odesstech
Consulting Office
Mainroad 26
CH-2542 Pieterlen / Swiss

Telephon       : +41(32)87 33 42  (office/privat: 8.00AM-8.00PM/GMT)
Electronic Mail: kermit@czheth5a.bitnet
MailBox        : +41(32)87 33 43 (24 Hour, 7 Day per week)
                 300_1200/75_1200_2400Baud/8_Bit/NoParity/1_Stopbit

Just for a info: We (by means "I") in Switzerland have improved
a  bit  Kermit-11 for RT-11 (as I'm specialist for that system),
according with Brian Nelson.

      Now because of a miss-understand with Brian  we  have  two  dif-
      ferent  kermit-11  of version 3.54, one in the USA distribued by
      Brian and one (a field-test version) in  european  (specialy  in
      Switzerland and in German) which are not completely command com-
      patible, I have added some what such as:

        -- CAPTURE filnam, a command which do the same as the  command
           sequence "SET LOG FILE filnam\SET DEBUG CONSOL";
        -- SET TRANSMIT [NO]LF, used to control Xmit of <LF> when pre-
           ceded by a <CR>;
        -- SET TRANSMIT [NO]EOF, used to control Xmit of <ctrl-Z> when
           EOF whas detected;
        -- SET TRANSMIT [NO]ECHOPLEX, used to control echoplex  (which
           mean  of  a  transfer protocol which wait for the echo of a
           character transmitted, trying 8 time to correct any differ-
           ences of Xmit-Char's and Rcvd-Char's).  This whas very use-
           full for message down-loading to to mailbox systems in ter-
           minal emulation mode of kermit.

      Howere, most other modifications are transparent to user,  exept
      that  "my"  version can be assembled with either RT11 V4's MACRO
      assembler or with the new feature of MACRO-11 from RT11  V5  and
      later.

      I have also adaped some command's like the server log-off  "BYE"
      command  to  be  recognized  and  exected  under  SHARE-Plus and
      SHARE-11.


      Please can you edit a bit this P.S. for your digest infos!

------------------------------

Date: Fri 18 Sep 87 15:12:42-EDT
From: Frank da Cruz <SY.FDC@CU20B.COLUMBIA.EDU>
Subject: K11 install procedure

Somebody sent me about 50 pages of DCL procedures, etc, for installing
K11 on RSX (printed).  I'll forward them to you.  You might want to contact
the guy (who says he is "enthralled" with the latest release), and get
the stuff in machine-readable form, check it out, and we'll include it with
the distribution.  In case it gets lost in the mail, he's Dean Fejes of
Lin-Dea Inc, phone 813-597-2291.  - Frank

------------------------------

Date:     Tue, 14 Feb 89 12:09 EST
From: <TLEWIS%UTKVX1.BITNET@cuvmb.cc.columbia.edu>
Subject:  Kermit on RSTS 7.2

Just got Kermit working this morning (Feb. 14), seems to work fine.  We are
running 2 PDP 11/70's, one under RSTS 8.0 and the other under 7.2 due to the
way in which some of our programs are written.  They won't run under 8.0.
We've had kermit running under 8.0 for a few years but I've always been told
by others on our staff that it wouldn't run under 7.2.  Well, we are looking
at shutting down the 11/70 with the 8.0 version of RSTS and I had to start
digging on finding a version of kermit for 7.2 or something like it.  I then
found in the documentation that it would run under 7.2.

Looks like kermit is running fine, the only difference I can find so far, and
I haven't looked at it much, is that I have to set attributes off before I can
send anything from the micro to the 11/70.  I can receive files without doing
this but cannot send them to the host.  Anyway as long as I know what to do,
I'm in good shape.

Thanks for your reply!

Terry Lewis
University of Tennessee at Martin

------------------------------

Date: Tue, 14 Feb 89 14:37 EDT
From: Brian Nelson <BRIAN%UOFT02.BITNET@cuvmb.cc.columbia.edu>
Subject: RE: [<TLEWIS%UTKVX1.BITNET@cuvmb.cc.columbia.edu>: Kermit on RSTS 7.2]

Thanks. Re attributes on/off, there was something I sent to you a while
back with msdos kermit and retry limits, xfer would fail on attribute
packets unless I set the retry cound up on the pc past the default to
account for the # of atribute packets I send.

There are other problems with k11 on 7.2 that can show up, perhaps
it would be a good idea for me to document them.

brian

------------------------------

Date: Wed, 27 Nov 91 20:59:33 -0500
From: billy@mix.com
Subject: Kermit-11 floppy swapping problem solved
To: brian@uoft02.utoledo.edu

Problem: RT Kermit does not notice when you remove a diskette and then
insert another one.  Here's the fix, in the opndev routine in K11RTD:

;       force USR to re-read dir segment, allowing one to swap floppies..

        BLKEY   =       256             ; /BBS/ RMON dir seg number in memory

        .lock                           ; /BBS/ lock the USR in memory, then
        .pval   #rtwork ,#BLKEY ,#0     ; /BBS/ force it to re-read the dir
        .lookup #rtwork ,#lun.sr,r1     ; open the DEVICE for input
        .unlock                         ; /BBS/ now release the USR..
        bcs     100$                    ; can not find it
        clr     r0                      ; no errors

Billy Y..

------------------------------

